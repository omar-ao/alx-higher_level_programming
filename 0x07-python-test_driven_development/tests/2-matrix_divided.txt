The "matrix_divided" module
===========================

Using the 'matrix_divided' module
---------------------------------

Import the 'matrix_divided' from the 'matrix_divided' module

	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Check for module documentation

	>>> m_doc = __import__("2-matrix_divided").__doc__
	>>> len(m_doc) > 1
	True

Checking for the function doc

	>>> f_doc = matrix_divided.__doc__
	>>> len(f_doc) > 1
	True

Check if the function returns new matrix

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Check if matrix is list of list

	>>> matrix_divided([1, 3], 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Check if matrix contains lists of integers or floats

	>>> matrix_divided([['h', 'b'], [2, 2]], 4)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing if each row of the matrix is the same size

	>>> matrix_divided([[1, 3, 4], [3, 5]], 3)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Trying if div is a number

	>>> matrix_divided(matrix, 'x')
	Traceback (most recent call last):
	...
	TypeError: div must be a number

div can't be equal to 0

	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero
	
